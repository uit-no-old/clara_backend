apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.service.component}}"
spec:
  type: {{ .Values.service.type }}
  ports:
   - port: {{ .Values.service.externalPort }}
     targetPort: {{ .Values.service.internalPort }}
     protocol: TCP
  selector:
    component: "{{.Release.Name}}-{{.Values.service.component}}"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.service.component}}"
spec:
  replicas: {{ default 1 .Values.deployment.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.service.component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.service.component}}"
    spec:
      containers:
        - name: {{ template "fullname" . }}
          image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
          tty: true
          stdin: true
          ports:
           - name: http
             containerPort: {{.Values.deployment.containerPort}}
          resources:
            requests:
              cpu: "{{.Values.deployment.cpu}}"
              memory: "{{.Values.deployment.memory}}"
          env:
           - name: WORKFLOW_RELEASE
             value: {{.Release.Name | quote }}
           - name: MONGO_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: sweet-ostrich-mongodb
                 key: mongodb-root-password
           - name: REDIS_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: zooming-ladybird-redis
                 key: redis-password
           - name: DATAPORTEN_CLIENT_ID
             valueFrom:
               secretKeyRef:
                 name: dataporten
                 key: client_id
           - name: DATAPORTEN_CLIENT_SECRET
             valueFrom:
               secretKeyRef:
                 name: dataporten
                 key: client_secret
           - name: DATAPORTEN_SECRET_KEY
             valueFrom:
               secretKeyRef:
                 name: dataporten
                 key: secret_key
           - name: DATAPORTEN_ADMIN_CLIENT_ID
             valueFrom:
               secretKeyRef:
                 name: dataportenadmin
                 key: client_id
           - name: DATAPORTEN_ADMIN_CLIENT_SECRET
             valueFrom:
               secretKeyRef:
                 name: dataportenadmin
                 key: client_secret
